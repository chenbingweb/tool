1 从github下载源码
	git clone http://XXX
2 切换至下载好的源码路径
	cd XXX
3 设置开发者信息
	git config --global user.name "XX"
	git config --global user.email "XX@XX"
4 查看用户信息
	git config --global user.name
	git config --global user.email
5 查看所有关于git配置信息
	git config --list 
6 查看工作区文件状态
	git status
7 将代码从工作区添加到缓存区
	git add '文件名'
	(会提示用户"use 'git add<file> to include in what will be committed'")
8 将缓存区的代码添加到版本库里
	（1） git commit '文件名'-->添加更新说明
	（2） git commit -m "描述"
	 (3)  git commit -a -m "描述"
9 查看更新代码日志
	git log
10 对比代码
	git diff（工作区和缓存区代码 ）
	git diff --cached 
	git diff --master 代码区和缓存区
11 撤销缓存区的代码到工作区
	git reset HEAD <file>
12 将工作区的代码撤销回去
	git checkout -- <file>
14 补齐提交代码
	git commit -m "描述" --amend
15 清除暂存区的文件
	git rm <file>
16 清除工作区和暂存区
	git rm -f <file>	
17 清除暂存区
	git rm --cached <file>
18 恢复工作区文件
	git checkout <id> <file>(指定文件恢复)
	git reset --hard <id>(整个版本恢复)
	git reset --hard HEAD^（指针向下恢复版本）
	git reset --hard HEAD~<num>（指正向下走几步恢复版本）
19 记录用户操作记录
	git reflog (记录操作行为)	
	
20 恢复用户操作过的版本
	git reflog --hard <id>	
21 远程仓库名
	git remote
	git remote -v(查看版本)
22 同步到githut
	git push <仓库名> master
23 从仓库同步更新代码到工作区
	git fetch  (需要手动合并)
	git diff master origin/master(对比远程和本地代码)
	git merge origin/master(合并本地代码)

	git pull(直接拉取仓库里的代码到本地)
	


	git pull(自带合并)



	









